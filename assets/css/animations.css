/* === ANIMATIONS === */

/* Pulse animation */
@keyframes pulse {
  0% { 
    opacity: 0.7; 
    transform: scale(1);
  }
  50% { 
    opacity: 1; 
    transform: scale(1.1);
  }
  100% { 
    opacity: 0.7; 
    transform: scale(1);
  }
}

.pulse {
  animation: pulse 2s infinite;
}

/* Glow effect */
.glow {
  box-shadow: 0 0 10px var(--glow-color);
  transition: box-shadow 0.3s ease;
}

.glow:hover {
  box-shadow: 0 0 20px var(--glow-color);
}

/* Typewriter effect */
.typewriter {
  overflow: hidden;
  border-right: 0.15em solid var(--primary-color);
  white-space: nowrap;
  animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink-caret {
  from, to { border-color: transparent; }
  50% { border-color: var(--primary-color); }
}

/* Fade in/out */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes fadeOut {
  from { opacity: 1; transform: translateY(0); }
  to { opacity: 0; transform: translateY(-10px); }
}

.fade-in {
  animation: fadeIn 0.3s ease-out;
}

.fade-out {
  animation: fadeOut 0.3s ease-in;
}

/* Slide animations */
@keyframes slideInRight {
  from { transform: translateX(100%); }
  to { transform: translateX(0); }
}

@keyframes slideOutRight {
  from { transform: translateX(0); }
  to { transform: translateX(100%); }
}

.slide-in-right {
  animation: slideInRight 0.3s ease-out;
}

.slide-out-right {
  animation: slideOutRight 0.3s ease-in;
}

/* Loading spinner */
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.spinner {
  animation: spin 1s linear infinite;
}

/* Button press effect */
.btn-press {
  transform: scale(0.95);
  transition: transform 0.1s ease;
}

/* Hover effects */
.hover-lift {
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
}

/* Smooth transitions */
.smooth-transition {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Console text animations */
.console-text {
  animation: fadeIn 0.2s ease-out;
}

.console-text.system {
  border-left: 3px solid var(--primary-color);
  padding-left: 0.5rem;
}

.console-text.ai {
  border-left: 3px solid var(--success-color);
  padding-left: 0.5rem;
}

.console-text.user {
  border-left: 3px solid var(--info-color);
  padding-left: 0.5rem;
}

.console-text.error {
  border-left: 3px solid var(--error-color);
  padding-left: 0.5rem;
}

.console-text.voice {
  border-left: 3px solid var(--warning-color);
  padding-left: 0.5rem;
}

/* Status indicator animations */
.status-indicator {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.status-indicator.active {
  animation: pulse 2s infinite;
}

/* Capture overlay animation */
.capture-overlay {
  animation: fadeIn 0.2s ease-out;
}

/* Button state animations */
.btn:disabled {
  animation: none;
  transform: none;
}

.btn.loading {
  position: relative;
  color: transparent;
}

.btn.loading::after {
  content: '';
  position: absolute;
  width: 1rem;
  height: 1rem;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

/* Responsive animations */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}
